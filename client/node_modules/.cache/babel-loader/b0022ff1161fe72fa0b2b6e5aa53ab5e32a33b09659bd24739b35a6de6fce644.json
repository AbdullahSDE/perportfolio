{"ast":null,"code":"import { TOTAL_SCREENS } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\nexport default class ScrollService {\n  constructor() {\n    this.scrollToHireMe = () => {\n      let ccontactMeScreen = document.getElementById(\"Contact Me\");\n      if (!ccontactMeScreen) return;\n      ccontactMeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    this.scrollToHome = () => {\n      let homeScreen = document.getElementById(\"Home\");\n      if (!homeScreen) return;\n      homeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    this.isElementInView = (elem, type) => {\n      let rec = elem.getBoundingClientReact();\n      let elementTop = rec.top;\n      let elementBottom = rec.Bottom;\n      let partiallyVisible = elementTop < window.innerheight && elementBottom.Bottom >= 0;\n      let completelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\n      switch (type) {\n        case \"partial\":\n          return partiallyVisible;\n        case \"complete\":\n          return completelyVisible;\n        default:\n          return false;\n      }\n    };\n    this.checkCurrentScreenUnderViewport = event => {\n      if (!event || Object.keys(event).length < 1) return;\n      for (let screen of TOTAL_SCREENS) {\n        let screenfromDOM = document.getElementById(screen.screen_name);\n        if (!screenfromDOM) continue;\n        let fullyVisible = this.getElementById(screenfromDOM, \"complete\");\n        let partiallyVisible = this.isElementInView(screenfromDOM, \"partial\");\n        if (fullyVisible || partiallyVisible) {\n          if (partiallyVisible && !screen.alreadyRendered) {\n            ScrollService.currentScreenFadeIn.next({\n              fadeInScreen: screen.screen_name\n            });\n            screen[\"alreadyRendered\"] = true;\n            break;\n          }\n          if (fullyVisible) {\n            ScrollService.currentScreenBroadcaster.next({\n              screenInview: screen.screen_name\n            });\n            break;\n          }\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", this.checkCurrentScreenUnderViewport);\n  }\n}\nScrollService.ScrollHandler = new ScrollService();\nScrollService.currentScreenBroadcaster = new Subject();\nScrollService.currentScreenFadeIn = new Subject();","map":{"version":3,"names":["TOTAL_SCREENS","Subject","ScrollService","constructor","scrollToHireMe","ccontactMeScreen","document","getElementById","scrollIntoView","behavior","scrollToHome","homeScreen","isElementInView","elem","type","rec","getBoundingClientReact","elementTop","top","elementBottom","Bottom","partiallyVisible","window","innerheight","completelyVisible","innerHeight","checkCurrentScreenUnderViewport","event","Object","keys","length","screen","screenfromDOM","screen_name","fullyVisible","alreadyRendered","currentScreenFadeIn","next","fadeInScreen","currentScreenBroadcaster","screenInview","addEventListener","ScrollHandler"],"sources":["C:/Users/user/Desktop/Portfolio/server/src/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL_SCREENS } from \"./commonUtils\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport default class ScrollService {\r\n  static ScrollHandler = new ScrollService();\r\n\r\n  static currentScreenBroadcaster = new Subject();\r\n  static currentScreenFadeIn = new Subject();\r\n\r\n  constructor() {\r\n    window.addEventListener(\"scroll\", this.checkCurrentScreenUnderViewport);\r\n  }\r\n  scrollToHireMe = () => {\r\n    let ccontactMeScreen = document.getElementById(\"Contact Me\");\r\n    if (!ccontactMeScreen) return;\r\n    ccontactMeScreen.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  scrollToHome = () => {\r\n    let homeScreen = document.getElementById(\"Home\");\r\n    if (!homeScreen) return;\r\n    homeScreen.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  isElementInView = (elem, type) => {\r\n    let rec = elem.getBoundingClientReact();\r\n    let elementTop = rec.top;\r\n    let elementBottom = rec.Bottom;\r\n\r\n    let partiallyVisible =\r\n      elementTop < window.innerheight && elementBottom.Bottom >= 0;\r\n    let completelyVisible =\r\n      elementTop >= 0 && elementBottom <= window.innerHeight;\r\n\r\n    switch (type) {\r\n      case \"partial\":\r\n        return partiallyVisible;\r\n\r\n      case \"complete\":\r\n        return completelyVisible;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  checkCurrentScreenUnderViewport = (event) => {\r\n    if (!event || Object.keys(event).length < 1) return;\r\n    for (let screen of TOTAL_SCREENS) {\r\n      let screenfromDOM = document.getElementById(screen.screen_name);\r\n      if (!screenfromDOM) continue;\r\n\r\n      let fullyVisible = this.getElementById(screenfromDOM, \"complete\");\r\n      let partiallyVisible = this.isElementInView(screenfromDOM, \"partial\");\r\n\r\n      if (fullyVisible || partiallyVisible) {\r\n        if (partiallyVisible && !screen.alreadyRendered) {\r\n          ScrollService.currentScreenFadeIn.next({\r\n            fadeInScreen: screen.screen_name,\r\n          });\r\n          screen[\"alreadyRendered\"] = true;\r\n          break;\r\n        }\r\n        if (fullyVisible) {\r\n          ScrollService.currentScreenBroadcaster.next({\r\n            screenInview: screen.screen_name,\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,eAAe;AAC7C,SAASC,OAAO,QAAQ,MAAM;AAE9B,eAAe,MAAMC,aAAa,CAAC;EAMjCC,WAAW,GAAG;IAAA,KAGdC,cAAc,GAAG,MAAM;MACrB,IAAIC,gBAAgB,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MAC5D,IAAI,CAACF,gBAAgB,EAAE;MACvBA,gBAAgB,CAACG,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACzD,CAAC;IAAA,KACDC,YAAY,GAAG,MAAM;MACnB,IAAIC,UAAU,GAAGL,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;MAChD,IAAI,CAACI,UAAU,EAAE;MACjBA,UAAU,CAACH,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACnD,CAAC;IAAA,KACDG,eAAe,GAAG,CAACC,IAAI,EAAEC,IAAI,KAAK;MAChC,IAAIC,GAAG,GAAGF,IAAI,CAACG,sBAAsB,EAAE;MACvC,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAAG;MACxB,IAAIC,aAAa,GAAGJ,GAAG,CAACK,MAAM;MAE9B,IAAIC,gBAAgB,GAClBJ,UAAU,GAAGK,MAAM,CAACC,WAAW,IAAIJ,aAAa,CAACC,MAAM,IAAI,CAAC;MAC9D,IAAII,iBAAiB,GACnBP,UAAU,IAAI,CAAC,IAAIE,aAAa,IAAIG,MAAM,CAACG,WAAW;MAExD,QAAQX,IAAI;QACV,KAAK,SAAS;UACZ,OAAOO,gBAAgB;QAEzB,KAAK,UAAU;UACb,OAAOG,iBAAiB;QAC1B;UACE,OAAO,KAAK;MAAC;IAEnB,CAAC;IAAA,KAEDE,+BAA+B,GAAIC,KAAK,IAAK;MAC3C,IAAI,CAACA,KAAK,IAAIC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MAC7C,KAAK,IAAIC,MAAM,IAAI/B,aAAa,EAAE;QAChC,IAAIgC,aAAa,GAAG1B,QAAQ,CAACC,cAAc,CAACwB,MAAM,CAACE,WAAW,CAAC;QAC/D,IAAI,CAACD,aAAa,EAAE;QAEpB,IAAIE,YAAY,GAAG,IAAI,CAAC3B,cAAc,CAACyB,aAAa,EAAE,UAAU,CAAC;QACjE,IAAIX,gBAAgB,GAAG,IAAI,CAACT,eAAe,CAACoB,aAAa,EAAE,SAAS,CAAC;QAErE,IAAIE,YAAY,IAAIb,gBAAgB,EAAE;UACpC,IAAIA,gBAAgB,IAAI,CAACU,MAAM,CAACI,eAAe,EAAE;YAC/CjC,aAAa,CAACkC,mBAAmB,CAACC,IAAI,CAAC;cACrCC,YAAY,EAAEP,MAAM,CAACE;YACvB,CAAC,CAAC;YACFF,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI;YAChC;UACF;UACA,IAAIG,YAAY,EAAE;YAChBhC,aAAa,CAACqC,wBAAwB,CAACF,IAAI,CAAC;cAC1CG,YAAY,EAAET,MAAM,CAACE;YACvB,CAAC,CAAC;YACF;UACF;QACF;MACF;IACF,CAAC;IA1DCX,MAAM,CAACmB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACf,+BAA+B,CAAC;EACzE;AA0DF;AAlEqBxB,aAAa,CACzBwC,aAAa,GAAG,IAAIxC,aAAa,EAAE;AADvBA,aAAa,CAGzBqC,wBAAwB,GAAG,IAAItC,OAAO,EAAE;AAH5BC,aAAa,CAIzBkC,mBAAmB,GAAG,IAAInC,OAAO,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}