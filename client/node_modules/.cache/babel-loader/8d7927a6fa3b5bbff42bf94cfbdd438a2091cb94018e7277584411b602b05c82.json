{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Portfolio\\\\server\\\\src\\\\PortfolioContainer\\\\Home\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchScreen(i, Screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n  };\n  const getHeaderOptionsClasses = index => {\n    let classes = \"header-option \";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n    if (selectedScreen === index) classes += \"selected-header-option \";\n    return classes;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  useEffect(() => {\n    return () => {\n      currentScreenSubscription.unsubscribe();\n    };\n  }, [currentScreenSubscription]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Abdullah~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"ujF17CXvQfKrqR4WPi1qhAXORpE=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadcaster","subscribe","getHeaderOptions","map","Screen","i","getHeaderOptionsClasses","switchScreen","screen_name","index","classes","length","screen","screenComponent","document","getElementById","scrollIntoView","behavior","unsubscribe"],"sources":["C:/Users/user/Desktop/Portfolio/server/src/PortfolioContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    TOTAL_SCREENS,\r\n    GET_SCREEN_INDEX,\r\n} from \"../../../utilities/commonUtils\";\r\nimport ScrollService from \"../../../utilities/ScrollService\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n    const [selectedScreen, setSelectedScreen] = useState(0);\r\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false);\r\n\r\n    const updateCurrentScreen = (currentScreen) => {\r\n        if (!currentScreen || !currentScreen.screenInView) return;\r\n\r\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\r\n        if (screenIndex < 0) return;\r\n    };\r\n    let currentScreenSubscription =\r\n        ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\r\n\r\n    const getHeaderOptions = () => {\r\n        return TOTAL_SCREENS.map((Screen, i) => (\r\n            <div\r\n                key={Screen.screen_name}\r\n                className={getHeaderOptionsClasses(i)}\r\n                onClick={() => switchScreen(i, Screen)}\r\n            >\r\n                <span>{Screen.screen_name}</span>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const getHeaderOptionsClasses = (index) => {\r\n        let classes = \"header-option \";\r\n        if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\r\n\r\n        if (selectedScreen === index) classes += \"selected-header-option \";\r\n\r\n        return classes;\r\n    };\r\n\r\n    const switchScreen = (index, screen) => {\r\n        let screenComponent = document.getElementById(screen.screen_name);\r\n        if (!screenComponent) return;\r\n\r\n        screenComponent.scrollIntoView({ behavior: \"smooth\" });\r\n        setSelectedScreen(index);\r\n        setShowHeaderOptions(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            currentScreenSubscription.unsubscribe();\r\n        };\r\n    }, [currentScreenSubscription]);\r\n\r\n    return (\r\n        <div\r\n            className=\"header-container\"\r\n            onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n        >\r\n            <div className=\"header-parent\">\r\n                <div\r\n                    className=\"header-hamburger\"\r\n                    onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n                >\r\n                    <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\r\n                </div>\r\n                <div className=\"header-logo\">\r\n                    <span>Abdullah~</span>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        showHeaderOptions\r\n                            ? \"header-options show-hamburger-options\"\r\n                            : \"header-options\"\r\n                    }\r\n                >\r\n                    {getHeaderOptions()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}